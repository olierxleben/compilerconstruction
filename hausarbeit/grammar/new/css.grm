%{
    #include <stdio.h>
    #include <stdlib.h>
    #include "css_types.h"
    #include "y.tab.h"
	
    extern int yylex();
    extern int yyparse();
    extern FILE *yyin;
    
    void yyerror(const char *s);
    
    css_RuleList root;
%}

// types which are found/returned by flex 
%union{
	int pos;
    char* sval;
	css_Selector selector;
	css_Declaration declaration;
	css_SelectorList selectorList;
	css_DeclarationList declarationList;
	css_Rule rule;
	css_RuleList ruleList;
	char* prio;
}


// Terminal symbols of our language
%token <sval> STRING

%token LBRACE RBRACE COMMA DOT SEMICOLON COLON

%type <ruleList> rules css
%type <rule> arule
%type <declarationList> declarations
%type <declaration> declaration
%type <selectorList> selectors
%type <selector> selector

%%
// grammar section, parsing rules

css:				rules  {$$ = root = $1;}
	;

rules: 				arule rules { $$ = createCSSRuleList($1,$2); }
		  			| arule { $$ = createCSSRuleList($1,NULL); }
	;
arule:				selectors LBRACE declarations RBRACE {$$ = createCSSRule($1, $3); }
	;
selectors:			selector COMMA selectors { $$ = createCSSSelectorList($1,$3);}
					| selector { $$ = createCSSSelectorList($1, NULL);}
	;			
selector:			STRING { $$ = createCSSSelector($1); }
	;
declarations: 		declaration SEMICOLON declarations { $$ = createCSSDeclarationList($1,$3);}
					| declaration SEMICOLON { $$ = createCSSDeclarationList($1, NULL);}
					| declaration { $$ = createCSSDeclarationList($1, NULL);}
	;				
declaration:		STRING COLON STRING { $$ = createCSSDeclaration($1, $3); }

     ;   
%%
// user code section


int main(int argc, char** argv) {
    // set inputfile
    FILE *inFile = fopen(argv[1], "r");
    if(!inFile) {
        printf("Could not open input file!\n");
        return -1;
    }
    yyin = inFile;
   
    // flex version
    //yylex();
    
    // bison: parse until there is no input anymore
    do {
        yyparse();
    } while(!feof(yyin));
    
    return 0;
}

void yyerror(const char *s) {
    printf("EEK, parse error! Message: %s\n", s);
    exit(-1);
}
